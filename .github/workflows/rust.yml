name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            os: "ubuntu-latest"
            cross: false
            output: model
          - target: "x86_64-pc-windows-gnu"
            os: "ubuntu-latest"
            cross: true
            output: model.exe
          - target: "aarch64-apple-darwin"
            os: "macOS-latest"
            cross: true
            output: model
          - target: "x86_64-apple-darwin"
            os: "macOS-latest"
            cross: false
            output: model
    steps:
    - uses: actions/checkout@v3
    - name: Install toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        override: true
        toolchain: stable
        target: ${{ matrix.target }}
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target=${{ matrix.target }}
        use-cross: ${{ matrix.cross }}
    - name: Show output
      run: cp target/${{ matrix.target }}/release/${{ matrix.name }} .
    - name: list output
      run: ls -hal
